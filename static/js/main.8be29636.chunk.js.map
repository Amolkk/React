{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","SignedOutLinks","state","firebase","console","log","ProjectSummary","project","title","ProjectList","projects","map","id","key","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","content","authorFirstName","authorLastName","date","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","CreateProject","createProject","history","push","getFirestore","add","authorId","createdAt","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","reduxFirestore","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8be29636.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/create'>New Project</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">AK</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\n","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth } = props;\n  console.log(auth);\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">Project M</Link>\n        <SignedInLinks />\n        <SignedOutLinks />\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return{\n    auth: state.firebase.auth\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","import React from 'react'\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{project.title}</span>\n        <p>Posted by Amol Kakkar</p>\n        <p className=\"grey-text\">May 9, 2020</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList\n","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nclass Dashboard extends Component {\n  render() {\n    \n    // console.log(this.props);\n    const { projects } = this.props;\n    \n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6 l8\">\n            <ProjectList projects={projects} />\n          </div>\n          \n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nconst ProjectDetails = (props) => {\n  const { project } = props;\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>May 9, 2020 {project.date} </div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects'\n  }])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError } = this.props;\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SignUp\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n  return (dispatch, getState, {getFirestore}) => {\n    // make async call to database\n    const firestore = getFirestore();\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: 'Amol',\n      authorLastName: 'Kakkar',\n      authorId: 12345,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state\n    default:\n      return state\n  }\n};\n\nexport default authReducer;","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log('create project success');\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error');\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n\n// the key name will be the data property on the state object","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Replace this with your own config details\nvar config = {\n  apiKey: \"AIzaSyBV4aMfu9XizfICXxwqaVgXCS0SFv831n0\",\n  authDomain: \"projectm-2aba4.firebaseapp.com\",\n  databaseURL: \"https://projectm-2aba4.firebaseio.com\",\n  projectId: \"projectm-2aba4\",\n  storageBucket: \"projectm-2aba4.appspot.com\",\n  messagingSenderId: \"599179987900\",\n  appId: \"1:599179987900:web:d8184f536d030c85ef39b9\",\n  measurementId: \"G-QWZ6QK3KKJ\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}